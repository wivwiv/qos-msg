import"./http-BlFWNHJL.js";import{aD as c,aU as i,g as D,i as j}from"./index-gzDiX6cq.js";import{c as b}from"./useDataHandler-DIoGjH2Q.js";const w=t=>c.post(`/actions/${encodeURIComponent(t)}/start`),I=(t,n)=>c.put(`/actions/${encodeURIComponent(t)}/enable/${n}`),E=async()=>{try{const t=await c.get("/actions_summary");return Promise.resolve(t.map(n=>({id:i(n),...n})))}catch(t){return Promise.reject(t)}},R=async t=>{try{const n=await c.post("/actions",t);return Promise.resolve({...n,id:i(n)})}catch(n){return Promise.reject(n)}},U=t=>c.post("/actions_probe",t),S=(t,n=!1)=>c.delete(`/actions/${encodeURIComponent(t)}`,{params:n?{also_delete_dep_actions:n}:void 0,errorsHandleCustom:[400]}),M=async(t,n={})=>{if(!t)return Promise.reject();try{const o=await c.get(`/actions/${encodeURIComponent(t)}`,n);return Promise.resolve({...o,id:i(o)})}catch(o){return Promise.reject(o)}},F=async(t,n)=>{if(!t)return Promise.reject();try{const o=await c.put(`/actions/${encodeURIComponent(t)}`,n);return Promise.resolve({...o,id:i(o)})}catch(o){return Promise.reject(o)}},N=(t,n)=>c.post(`/nodes/${t}/actions/${encodeURIComponent(n)}/start`),_=t=>c.get(`/actions/${t}/metrics`),q=t=>c.put(`/actions/${t}/metrics/reset`),K=()=>{const t=j(),{handleActionDataAfterLoaded:n,handleActionDataBeforeSubmit:o,handleActionDataBeforeUpdate:m}=b(),u=e=>n(e),A=async(e,r={})=>{try{const s=await M(e,r);return u(s)}catch(s){return Promise.reject(s)}},y=async e=>{const r=await o(e);return R(r)},p=async e=>{try{const{id:r}=e,s=await m(e);return Reflect.deleteProperty(s,"id"),F(r,s)}catch(r){return console.error(r),Promise.reject(r)}},f=async(e,r=!1)=>S(e,r),g=async e=>_(e),P=async e=>q(e),$=(e,r)=>I(e,r),h=async e=>w(e),v=async(e,r)=>N(e,r),a=D(!1);return{getDetail:A,handleActionDataAfterLoaded:u,addAction:y,updateAction:p,deleteAction:f,getActionMetrics:g,resetActionMetrics:P,toggleActionEnable:$,reconnectAction:h,reconnectActionForNode:v,isTesting:a,testConnectivity:async e=>{try{a.value=!0;const r=await o(e);return await U(r),a.value=!1,Promise.resolve()}catch(r){return a.value=!1,Promise.reject(r)}},handleConnDirection:e=>{var d,l;if(!t.query.direction)return;const r=parseInt(t.query.direction,10),s=(d=t.query.connName)==null?void 0:d.toString(),C=(l=t.query.connType)==null?void 0:l.toString();e(r,s,C)}}};export{E as g,K as u};
