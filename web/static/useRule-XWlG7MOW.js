import{aD as d,z as A,h as k,M as b,g as V,a$ as L,j as D,b3 as f,b$ as B,b7 as T,bc as K,aY as v,bV as q,c0 as W,c1 as z,c2 as G,q as H,bs as Y,b4 as j,b2 as X,aT as $,bw as N,aU as J}from"./index-gzDiX6cq.js";import{u as x,a as Z,t as ee}from"./useBridgeTypeValue-DfFvHZxE.js";import"./http-BlFWNHJL.js";function ce(s={page:1,limit:1e3}){return d.get("/rules",{params:s})}function ae(s){return s?d.get("/rules/"+encodeURIComponent(s)):Promise.reject()}function ue(s){return d.post("/rules",s)}function te(){return d.get("/rule_events")}function ie(s,r){return s?d.put("/rules/"+encodeURIComponent(s),r):Promise.reject()}function le(s){return s?d.delete("/rules/"+encodeURIComponent(s)):Promise.reject()}function ge(s){return d.post("/rule_test",s,{transformResponse:[(r,c,l)=>l>299?JSON.parse(r):r]})}function pe(s){return d.get(`/rules/${s}/metrics`)}function de(s){return d.put(`/rules/${s}/metrics/reset`)}function Ee(s,r){return d.post(`/rules/${s}/test`,{context:r,stop_action_after_template_rendering:!1})}const w=["$events/client_check_authn_complete","$events/client_connected","$events/client_disconnected","$events/client_connack","$events/client_check_authz_complete","$events/session_subscribed","$events/session_unsubscribed","$events/schema_validation_failed","$events/message_transformation_failed","$events/message_delivered","$events/message_acked","$events/message_dropped","$events/delivery_dropped","$events/message_publish","$bridges/mqtt:*"],U=s=>{const r=w.findIndex(c=>c===s);return r===-1?w.length:r},ne=()=>{const{state:s,commit:r}=k(),{t:c}=A(),l=u=>(u.forEach(i=>{i.title.en=c(`RuleEvent.${b.camelCase(i.event)}`,{},{locale:"en"}),i.title.zh=c(`RuleEvent.${b.camelCase(i.event)}`,{},{locale:"zh"})}),u);return{getEventList:async()=>{try{let u=s.ruleEventList;if(!u.length){if(!s.ruleEventRequest){const E=te();r("SET_RULE_EVENT_REQUEST",E)}const i=await s.ruleEventRequest;u=l(i==null?void 0:i.sort((E,_)=>U(E.event)-U(_.event))),r("SET_RULE_EVENT_LIST",u)}return Promise.resolve(u)}catch(u){return r("SET_RULE_EVENT_REQUEST",null),Promise.reject(u)}}}},Re=()=>{const{bridgeTypeList:s}=x(),r=s.map(({value:t})=>t),{getEventList:c}=ne(),l=V([]);(async()=>{const t=await c(),e=new RegExp(`^${b.escapeRegExp(L)}`);l.value=t.filter(({event:n})=>!e.test(n))})();const I=D(()=>l.value.reduce((t,{event:e})=>u(e)?[...t,z]:[...t,e],[])),u=t=>t===K.MessagePublish,i=t=>u(t)?"${topic}":t,E=(t,e,n)=>{const o=e.find(({event:p})=>p===t);if(o)return{type:v.Event,target:o};const a=n.find(({idForRuleFrom:p})=>p===t);return a?{type:v.Bridge,target:a}:{type:v.Topic,target:t}},_=t=>{const e=new RegExp(`^(${r.join("|")}):`),n=t.match(e);if(!n||n.length<2)return T.MQTT;const[,o]=n;return o},y=(t,e,n)=>{if(t===v.Event)return n.find(({event:o})=>o===e);if(t===v.Bridge){const o=_(e);return n.find(({event:a})=>a===`$bridges/${o}:*`)}return n.find(({event:o})=>o===B)},C=(t,e,n)=>{const o=y(t,e,n),a=(o==null?void 0:o.test_columns)||{},p={},m={};return Object.keys(a).forEach(R=>{p[R]=a[R][0],m[R]=a[R][1]}),{context:p,descMap:m}},M=t=>q(t).map(n=>n.trim().replace(/^\n|\n$/g,"").trim().replace(/^("|')|("|')$/g,"")),S=t=>t.map(e=>`"${e}"`).join(`${W}
  `),O=(t,e,n)=>{const o=`${/^FOREACH/i.test(t.trim())?"":`SELECT
  `}${t}`,a=G(o),m=`${a.slice(-1)===`
`?"":`
`}FROM
  ${S(e)}`;let R=a+m;return n&&(R+=`
WHERE ${n}`),R},h=[f.Select,f.From,f.Where,f.Foreach,f.Do,f.Incase],F=(t,e)=>{var p;const n=h.filter(m=>m!==e),o=new RegExp(`${e}((\\s|\\n)+)(?<targetPart>((.|\\n)(?!${n.join("|")}))+)(\\n|\\s)*(${n.join("|")})?`,"i"),a=t.match(o);return((p=a==null?void 0:a.groups)==null?void 0:p.targetPart)||""};return{TOPIC_EVENT:B,allMsgsAndEvents:I,findInputTypeNTarget:E,getTestTargetEvent:y,getTestColumns:C,transFromStrToFromArr:M,transFromDataArrToStr:S,transSQLFormDataToSQL:O,replaceTargetPartInSQL:(t,e,n)=>{const o=F(t,e);return o.trim()===""?t.replace(new RegExp(`${e}`,"i"),a=>`${a}
  ${n}`):t.replace(o,n)},isMsgPubEvent:u,getEventForShow:i}},Q={MQTTBroker:T.MQTT,Kafka:T.KafkaConsumer,GCP:T.GCPConsumer,RabbitMQ:T.RabbitMQ},g={Message:"message",Event:"event",...Q},Te=()=>{const s=[g.Event,g.Message],r=e=>{const n=Object.entries(T).some(([,o])=>o===e);return!s.includes(e)&&n},c=e=>e.replace(L,""),{tl:l}=H("RuleEngine"),I={[g.Message]:l("messages"),[g.Event]:l("event"),[g.MQTT]:l("mqttBroker"),[g.Kafka]:`${l("kafka")} ${l("consumer")}`},{getBridgeLabelByTypeValue:u}=x(),i=e=>{let n=I[e];return!n&&r(e)&&(n=u(e)),n||e},E=Object.entries(Q).map(([,e])=>({value:e,label:i(e)})),_=Object.entries(g).map(([,e])=>({value:e,label:i(e)})),y=e=>X(e).type,C=new RegExp(`^${b.escapeRegExp(Y)}`),M=new RegExp(`^${b.escapeRegExp(L)}`),S=e=>C.test(e)?g.Event:M.test(e)?y(e.replace(L,"")):g.Message,O=e=>ee.find(o=>e.includes(o))||e,h=[g.Event,g.Message,T.MQTT],F=e=>h.includes(e),{getBridgeIcon:P}=Z();return{getBridgeIdFromInput:c,detectInputType:S,isBridgeType:r,isNotBridgeSourceTypes:s,sourceServerOptList:E,sourceOptList:_,inputTypesIconNew:h,getRuleSourceIcon:e=>{try{if(!e)return"";const n=O(e);return F(n)?j(`flowIcon/${n}.png`):r(e)?P(e):j(`img/${n}.png`)}catch{return""}}}},me=()=>{const s=":";return{judgeOutputType:c=>{if(typeof c=="string"){if(c.indexOf(s)>-1)return $.DataBridge}else if(typeof c=="object"&&"function"in c&&(c.function===$.Republish||c.function===$.Console))return c.function;return $.DataBridge}}},fe=()=>({convertFallbackActionToRuleOutput:r=>{if(r.kind===N.Republish)return{function:$.Republish,args:r.args};if(r.kind===N.Reference)return J(r);throw new Error("Unsupported fallback action kind")}});export{g as R,ie as a,ae as b,ue as c,ne as d,Re as e,le as f,ce as g,Te as h,Ee as i,fe as j,pe as q,de as r,ge as t,me as u};
